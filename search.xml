<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭博客这一周遇见的一些C++上的小细节——C++Primer(1)</title>
      <link href="/2019/09/07/2019-9-7/"/>
      <url>/2019/09/07/2019-9-7/</url>
      
        <content type="html"><![CDATA[<h1 id="i-与-i的区别"><a href="#i-与-i的区别" class="headerlink" title="i++与++i的区别"></a>i++与++i的区别</h1><p>&emsp;很久之前有去查过这俩的区别，时间久了忘得差不多了，大体只记得计算顺序上有差别。在看C++primer 11页的时候正好看到了这个前缀运算符，顺便重新学习了一下。大概是如下两个区别：  </p><h2 id="1-运算开销上"><a href="#1-运算开销上" class="headerlink" title="1.运算开销上"></a>1.运算开销上</h2><p>&emsp;就运算开销来讲，i++会比++i多占用一个寄存器.<br>i++的实质是<code>esp=i;  i=esp+i;</code>会先将i存储在一个临时的寄存器中再对i进行加一操作。<br>++i的实质是<code>i=i+1;</code>直接将i+1作为一个整体进行返回。</p><h2 id="2-判断逻辑上"><a href="#2-判断逻辑上" class="headerlink" title="2.判断逻辑上"></a>2.判断逻辑上</h2><p>&emsp;i++是先进行判断后加一，++i则是先自加后判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i=0;</span><br><span class="line">j=i++;</span><br><span class="line">k=++i;</span><br></pre></td></tr></table></figure><p>上述代码执行后结果i=2,j=0,k=2<br><strong>细节：在不影响判断逻辑的情况下使用++i占用内存更小，速度更快。</strong></p><h1 id="算数类型在64-32位系统中内存占用问题"><a href="#算数类型在64-32位系统中内存占用问题" class="headerlink" title="算数类型在64/32位系统中内存占用问题"></a>算数类型在64/32位系统中内存占用问题</h1><table><thead><tr><th align="center">system</th><th align="center">char</th><th align="center">short</th><th align="center">int</th><th align="center">long</th><th align="center">float</th><th align="center">double</th><th align="center">long long</th></tr></thead><tbody><tr><td align="center">32位</td><td align="center">1</td><td align="center">2</td><td align="center">4</td><td align="center">4</td><td align="center">4</td><td align="center">8</td><td align="center">8</td></tr><tr><td align="center">64位</td><td align="center">1</td><td align="center">2</td><td align="center">4</td><td align="center">8</td><td align="center">4</td><td align="center">8</td><td align="center">8</td></tr></tbody></table><p> -Note：单位byte，换算成位(bit)乘以8<br> 关于long的内存占用，在64位Windows上使用sizeof函数跑出来的结果和int一样占用4个字节 <del>我买了个假电脑嗷</del> ，而在64位Linux系统上是占用8个字节的。查了一些帖子说这个问题是不同的编译器用的数据模型不一样，64位Windows用的是LLP64模型，64位Linux用的是LP64。看师兄们的笔试题，<strong>一般问64位操作系统，默认按8个字节来处理的</strong></p><h1 id="指定字面类型值"><a href="#指定字面类型值" class="headerlink" title="指定字面类型值"></a>指定字面类型值</h1><p>C++Primer p.37，对字符和字符串字面值有：</p><table><thead><tr><th align="center">前缀</th><th align="center">含义</th><th align="center">类型</th></tr></thead><tbody><tr><td align="center">u</td><td align="center">Unicode 16字符</td><td align="center">char16_t</td></tr><tr><td align="center">U</td><td align="center">Unicode 32字符</td><td align="center">char32_t</td></tr><tr><td align="center">L</td><td align="center">kuanzifu</td><td align="center">wchat_t</td></tr><tr><td align="center">u8</td><td align="center">UTF-8</td><td align="center">char</td></tr><tr><td align="center">整数和浮点数类型有：</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">后缀</td><td align="center">最小匹配类型</td><td align="center">后缀</td></tr><tr><td align="center">:-:</td><td align="center">:-:</td><td align="center">:-:</td></tr><tr><td align="center">u/U</td><td align="center">unsigned</td><td align="center">f/F</td></tr><tr><td align="center">l/L</td><td align="center">long</td><td align="center">l/L</td></tr><tr><td align="center">ll/LL</td><td align="center">long long</td><td align="center"></td></tr><tr><td align="center"><strong>细节：单引号’a’表示字符，双引号“abc”表示字符串</strong></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> C++Primer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初步建成~👏👏👏</title>
      <link href="/2019/09/07/First-article/"/>
      <url>/2019/09/07/First-article/</url>
      
        <content type="html"><![CDATA[<p>虽然中间 <del>鸽</del> 学习了一周，总算是把blog搭完了嗷。<br>顺道换了个主题感觉还不错，有空在完善完善。<br>之后开始慢慢记录了嗷。</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
